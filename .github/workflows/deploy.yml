name: Deploy to EC2 and Set Up Airflow

on:
  push:
    branches:
      - main
      - github-action-hyerim

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add known hosts
        run: |
          echo "${{ secrets.KNOWN_HOSTS }}" >> ~/.ssh/known_hosts

      - name: Sync Master Node
        run: |
          ssh ec2-user@${{ secrets.MASTER_IP }} "mkdir -p /home/ec2-user/airflow_project"
          scp -r * ec2-user@${{ secrets.MASTER_IP }}:/home/ec2-user/airflow_project

      - name: Load .env to Master Node and Apply Environment Variables (Before Worker Deploy)
        run: |
          ssh ec2-user@${{ secrets.MASTER_IP }} "
            cd /home/ec2-user/airflow_project/airflow &&
            export \$(cat .env | xargs) &&
            echo \"AIRFLOW__CORE__SQL_ALCHEMY_CONN=\$AIRFLOW__CORE__SQL_ALCHEMY_CONN\" >> ~/.bashrc &&
            source ~/.bashrc
          "

      - name: Copy Airflow Project to Worker Nodes
        run: |
          ssh -A ec2-user@${{ secrets.MASTER_IP }} "ssh ec2-user@${{ secrets.WORKER1_PRIVATE_IP }} 'mkdir -p /home/ec2-user/airflow_project'"
          ssh -A ec2-user@${{ secrets.MASTER_IP }} "scp -r /home/ec2-user/airflow_project ec2-user@${{ secrets.WORKER1_PRIVATE_IP }}:/home/ec2-user/"
          ssh -A ec2-user@${{ secrets.MASTER_IP }} "ssh ec2-user@${{ secrets.WORKER2_PRIVATE_IP }} 'mkdir -p /home/ec2-user/airflow_project'"
          ssh -A ec2-user@${{ secrets.MASTER_IP }} "scp -r /home/ec2-user/airflow_project ec2-user@${{ secrets.WORKER2_PRIVATE_IP }}:/home/ec2-user/"
          ssh -A ec2-user@${{ secrets.MASTER_IP }} "ssh ec2-user@${{ secrets.WORKER3_PRIVATE_IP }} 'mkdir -p /home/ec2-user/airflow_project'"
          ssh -A ec2-user@${{ secrets.MASTER_IP }} "scp -r /home/ec2-user/airflow_project ec2-user@${{ secrets.WORKER3_PRIVATE_IP }}:/home/ec2-user/"

      - name: Debug Environment Variables
        run: |
          ssh ec2-user@${{ secrets.MASTER_IP }} "
            cd /home/ec2-user/airflow_project/airflow &&
            export \$(cat .env | xargs) &&
            echo \$AIRFLOW__CORE__SQL_ALCHEMY_CONN
          "

      - name: Clean up space
        run: |
          sudo apt-get clean
          sudo apt-get autoremove -y
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /var/lib/apt/lists/*
          sudo rm -rf /var/cache/apt/archives/*
          df -h

      - name: Deploy to Worker Nodes (Via Master Node)
        run: |
          ssh -A ec2-user@${{ secrets.MASTER_IP }} "ssh ec2-user@${{ secrets.WORKER1_PRIVATE_IP }} 'docker build --no-cache -t airflow-worker -f /home/ec2-user/airflow_project/airflow/Dockerfile /home/ec2-user/airflow_project/airflow && docker run -d airflow-worker'"
          ssh -A ec2-user@${{ secrets.MASTER_IP }} "ssh ec2-user@${{ secrets.WORKER2_PRIVATE_IP }} 'docker build --no-cache -t airflow-worker -f /home/ec2-user/airflow_project/airflow/Dockerfile /home/ec2-user/airflow_project/airflow && docker run -d airflow-worker'"
          ssh -A ec2-user@${{ secrets.MASTER_IP }} "ssh ec2-user@${{ secrets.WORKER3_PRIVATE_IP }} 'docker build --no-cache -t airflow-worker -f /home/ec2-user/airflow_project/airflow/Dockerfile /home/ec2-user/airflow_project/airflow && docker run -d airflow-worker'"
      
      - name: Start Airflow on Master
        run: |
          ssh ec2-user@${{ secrets.MASTER_IP }} "cd /home/ec2-user/airflow_project/airflow && docker-compose down && docker-compose up -d"